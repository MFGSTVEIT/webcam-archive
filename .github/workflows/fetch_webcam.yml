name: Fetch Webcam Image

on:
  schedule:
    # 🌞 Sommerzeit (März–Oktober, UTC+2)
    - cron: "5,20,35,50 6-17 * 3-10 *"   # 08:05–19:50 MESZ
    - cron: "5 18 * 3-10 *"              # 20:05 MESZ

    # ❄️ Winterzeit (November–Februar, UTC+1)
    - cron: "5,20,35,50 7-18 * 11-2 *"   # 08:05–19:50 MEZ
    - cron: "5 19 * 11-2 *"              # 20:05 MEZ

  workflow_dispatch:                      # manuelles Starten möglich

concurrency:
  group: webcam-archive
  cancel-in-progress: false

jobs:
  fetch:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repo (vollständige History)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set Date Variables
        run: |
          echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
          echo "TIME=$(date +'%H%M')" >> $GITHUB_ENV

      - name: Create Directory for Today
        run: mkdir -p images/$DATE

      - name: Download Webcam Image
        run: |
          curl -s -o images/$DATE/$TIME.jpg https://raw.githubusercontent.com/MFGSTVEIT/Webcam/master/webcam.jpg

      - name: Cleanup Old Directories (older than 30 days)
        run: |
          find images/ -type d -mtime +30 -exec rm -rf {} +

      - name: Update daily manifests
        run: |
          for d in images/*/; do
            if [ -d "$d" ]; then
              FILES=$(ls -1 "$d" | grep '\.jpg$' | sort)
              echo "{" > "$d/manifest.json"
              echo "  \"images\": [" >> "$d/manifest.json"
              for f in $FILES; do
                echo "    \"$f\"," >> "$d/manifest.json"
              done
              sed -i '$ s/,$//' "$d/manifest.json"
              echo "  ]" >> "$d/manifest.json"
              echo "}" >> "$d/manifest.json"
            fi
          done

      - name: Update global manifest.json
        run: |
          mkdir -p images
          DAYS=$(ls -1 images | sort -r)
          echo "{" > images/manifest.json
          echo "  \"days\": [" >> images/manifest.json
          for d in $DAYS; do
            if [ -d "images/$d" ]; then
              echo "    \"$d\"," >> images/manifest.json
            fi
          done
          sed -i '$ s/,$//' images/manifest.json
          echo "  ]" >> images/manifest.json
          echo "}" >> images/manifest.json
          cat images/manifest.json

      - name: Commit and Push Changes with Retry
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add images
          git commit -m "Add webcam image $DATE $TIME" || echo "No changes"

          # Push mit bis zu 3 Retries bei Konflikten
          for i in 1 2 3; do
            git pull --rebase origin main && git push origin HEAD:main && break
            echo "Push fehlgeschlagen, retry ($i/3)..."
            sleep 5
          done
