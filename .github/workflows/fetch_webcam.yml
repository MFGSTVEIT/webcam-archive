name: Fetch Webcam Image

on:
  #schedule:
    # 🌞 Sommerzeit (März–Oktober, UTC+2)
    #- cron: "*/5 6-17 * 3,4,5,6,7,8,9,10 *"  # alle 5 Minuten 08:00–19:55 MESZ
    #- cron: "5 17 * 3,4,5,6,7,8,9,10 *"     # 20:05 MESZ

    # ❄️ Winterzeit (November–Februar, UTC+1)
    #- cron: "*/5 7-18 * 11,12,1,2 *"        # alle 5 Minuten 08:00–19:55 MEZ
    #- cron: "5 18 * 11,12,1,2 *"            # 20:05 MEZ

  workflow_dispatch:                        # manuelles Starten möglich

concurrency:
  group: webcam-archive
  cancel-in-progress: false

jobs:
  fetch:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repo (vollständige History)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set Date Variable
        run: |
          DATE=$(date +'%Y-%m-%d')
          echo "DATE=$DATE" >> $GITHUB_ENV

      - name: Download current webcam.jpg and get real timestamp
        run: |
          URL="https://raw.githubusercontent.com/MFGSTVEIT/Webcam/master/webcam.jpg"
          TMP_IMG=$(mktemp /tmp/webcam-XXXX.jpg)
          curl -s -o $TMP_IMG $URL
          echo "TMP_IMG=$TMP_IMG" >> $GITHUB_ENV

          # Timestamp aus Last-Modified Header
          LASTMOD=$(curl -sI $URL | grep -i '^last-modified:' | cut -d' ' -f2-)
          if [ -z "$LASTMOD" ]; then
            # fallback: aktuelle UTC Zeit
            TIME=$(date -u +'%H%M')
          else
            TIME=$(date -u -d "$LASTMOD" +'%H%M')
          fi
          echo "TIME=$TIME" >> $GITHUB_ENV
          echo "Real timestamp: $TIME from $LASTMOD"

      - name: Check if image already exists
        run: |
          TARGET="images/$DATE/$TIME.jpg"
          if [ -f "$TARGET" ]; then
            echo "Image $TARGET already exists – skipping commit."
            exit 0
          fi
          mkdir -p images/$DATE
          mv $TMP_IMG "$TARGET"
          echo "Saved new image: $TARGET"

      - name: Cleanup Old Directories (older than 30 days)
        run: |
          find images/ -type d -mtime +30 -exec rm -rf {} +

      - name: Update daily manifests
        run: |
          for d in images/*/; do
            if [ -d "$d" ]; then
              FILES=$(ls -1 "$d" | grep '\.jpg$' | sort)
              echo "{" > "$d/manifest.json"
              echo "  \"images\": [" >> "$d/manifest.json"
              for f in $FILES; do
                echo "    \"$(basename $f)\"," >> "$d/manifest.json"
              done
              sed -i '$ s/,$//' "$d/manifest.json"
              echo "  ]" >> "$d/manifest.json"
              echo "}" >> "$d/manifest.json"
            fi
          done

      - name: Update global manifest.json
        run: |
          mkdir -p images
          DAYS=$(ls -1 images | sort -r)
          echo "{" > images/manifest.json
          echo "  \"days\": [" >> images/manifest.json
          for d in $DAYS; do
            if [ -d "images/$d" ]; then
              echo "    \"$d\"," >> images/manifest.json
            fi
          done
          sed -i '$ s/,$//' images/manifest.json
          echo "  ]" >> images/manifest.json
          echo "}" >> images/manifest.json

      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add images
          git commit -m "Add webcam image $DATE $TIME" || echo "No changes"

          # Push mit Retry
          for i in 1 2 3; do
            git pull --rebase origin main && git push origin HEAD:main && break
            echo "Push fehlgeschlagen, retry ($i/3)..."
            sleep 5
          done
